version: '3.7'

services:

  # Express Server
  nodejs:
    # image: webapp-server
    build: 
      context: ./api
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: ./api/.env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "8080:8080"
    volumes:
      - ./api:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    depends_on:
      - db

   # Mongodb database
  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: ./api/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network
    #   ports:
    #   - 27017:27017
    # command: mongod --noauth --smallfiles
    # networks:
    #   - appnetwork

  # REACT client 
  client:
    # image: webapp-client:latest
    build: 
      context: ./client
      dockerfile: Dockerfile
    image: webapp-client
    container_name: webapp-client
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./client:/var/www/app
    links:
      - nodejs
    networks: 
      - app-network

  # # Nginx Load Balancer
  # webserver:
  #   # image: nginx:latest
  #   build:
  #     context: ./client
  #   container_name: webserver
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - client
  #   volumes:
  #     - web-root:/var/www/html
  #     - ./nginx-conf:/etc/nginx/nginx.conf
  #     # - certbot-etc:/etc/letsencrypt
  #     # - certbot-var:/var/lib/letsencrypt
  #   depends_on:
  #     - nodejs
  #   networks:
  #     - app-network

networks:
    app-network:
        driver: bridge
   
volumes: 
    dbdata:
    node_modules:
    web-root:
      driver: local
    


# Letsencrypy certbot configurations
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com 
