version: '3.7'

services:
    # REACT client 
  react:
    # image: webapp-client:latest
    build: 
      context: ./client
      dockerfile: Dockerfile
    image: webapp-client
    container_name: react
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./client:/var/www/app
    links:
      - node
    networks: 
      - app-network

  # Express Server
  node:
    # image: webapp-server
    build: 
      context: ./api
      dockerfile: Dockerfile
    image: webapp-server
    container_name: node
    restart: unless-stopped
    volumes:
      - ./api:/opt/node_app/app
      - /opt/node_app/app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    networks:
      - app-network


  # Mongodb database
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
    volumes:
      - data-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

networks:
    app-network:
        driver: bridge
   
volumes: 
    data-volume:
    node_modules:
    web-root:
      driver: local




  # # Nginx Load Balancer
  # webserver:
  #   # image: nginx:latest
  #   build:
  #     context: ./client
  #   container_name: webserver
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - client
  #   volumes:
  #     - web-root:/var/www/html
  #     - ./nginx-conf:/etc/nginx/nginx.conf
  #     # - certbot-etc:/etc/letsencrypt
  #     # - certbot-var:/var/lib/letsencrypt
  #   depends_on:
  #     - nodejs
  #   networks:
  #     - app-network

# Letsencrypy certbot configurations
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com 
